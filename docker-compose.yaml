services:

  project-server:
    build:
      context: ./server/project-service/
      dockerfile: Dockerfile
    restart: always
    container_name: "project-server"
    hostname: "project-server"
    ports:
      - 8080:8080
    environment:
      - PORT=8080
      - MONGO_DB_URI=mongodb://root:pass@mongo-project:27017
    depends_on:
      mongo-project:
        condition: service_healthy

  # NoSQL: MongoDB
  mongo-project:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: pass
      MONGO_INITDB_DATABASE: mongoDemo
    healthcheck:
      test: echo 'db.runCommand("ping").ok'
      interval: 10s
      timeout: 10s
      retries: 10
    volumes:
      - mongo_project_store:/data/db

  angular-app:
    build:
      context: ./client/ui-trello
      dockerfile: Dockerfile
    container_name: angular-app
    ports:
      - "4200:4200"
    volumes:
      - ./client/ui-trello:/app
      - /app/node_modules
      - ./api-gateway:/app/api-gateway
    depends_on:
      - project-server
      - user-server
      - task-server
    environment:
      - CHOKIDAR_USEPOLLING=true
    mem_limit: 2g

  mongo-express-project:
    image: mongo-express
    restart: always
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo-project
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=pass
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
      - ME_CONFIG_MONGODB_URL=mongodb://root:pass@mongo-project:27017
    depends_on:
      - mongo-project
    ports:
      - "8081:8081"
    volumes:
      - mong_project_express_data:/data/db



  task-server:
    build:
      context: ./server/task-service/
      dockerfile: Dockerfile
    restart: always
    container_name: "task-server"
    hostname: "task-server"
    ports:
      - 8089:8080
    environment:
      - PORT=8080
      - MONGO_DB_URI=mongodb://root:pass@mongo-task:27017
    depends_on:
      mongo-task:
        condition: service_healthy

  mongo-task:
    image: mongo
    restart: always
    ports:
      - "27019:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: pass
      MONGO_INITDB_DATABASE: mongoTask
    healthcheck:
      test: echo 'db.runCommand("ping").ok'
      interval: 10s
      timeout: 10s
      retries: 10
    volumes:
      - mongo_task_store:/data/db


  mongo-express-task:
    image: mongo-express
    restart: always
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo-task
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=pass
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
      - ME_CONFIG_MONGODB_URL=mongodb://root:pass@mongo-task:27017
    depends_on:
      - mongo-task
    ports:
      - "8088:8081"
    volumes:
      - mongo_task_express_data:/data/db



  user-server:
    build:
      context: ./server/user-service/
      dockerfile: Dockerfile
    restart: always
    container_name: "user-server"
    hostname: "user-server"
    ports:
      - 8090:8080
    environment:
      - PORT=8080
      - MONGO_DB_URI=mongodb://root:pass@mongo-user:27017
      - SMTP_EMAIL=${SMTP_EMAIL}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_HOST=${REDIS_HOST}
    depends_on:
      mongo-user:
        condition: service_healthy

  mongo-user:
    image: mongo
    restart: always
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: pass
      MONGO_INITDB_DATABASE: mongoDb
    healthcheck:
      test: echo 'db.runCommand("ping").ok'
      interval: 10s
      timeout: 10s
      retries: 10
    volumes:
      - mongo_user_store:/data/db

  mongo-express-user:
    image: mongo-express
    restart: always
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo-user
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=pass
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
      - ME_CONFIG_MONGODB_URL=mongodb://root:pass@mongo-user:27017
    depends_on:
      - mongo-user
    ports:
      - "8083:8081"
    volumes:
      - mong_user_express_data:/data/db

  api_gateway:
    build:
      context: ./api-gateway/
      dockerfile: Dockerfile
    container_name: api-gateway
    restart: on-failure
    ports:
      - "443:443"
    depends_on:
      - user-server
      - project-server
      - angular-app
      - task-server
    entrypoint: [ "/bin/bash", "-c", "while ! curl -s user-server:8080; do sleep 1; done; nginx -g 'daemon off;'" ]

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  mongo_project_store:
  mongo_user_store:
  mongo_task_store:
  mong_user_express_data:
  mong_project_express_data:
  redis_data:
  mongo_task_express_data:
